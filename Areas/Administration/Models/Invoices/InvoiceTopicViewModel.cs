/*==============================================================================================================================
| Author        Ignia, LLC
| Client        Goldsim
| Project       Website
\=============================================================================================================================*/
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;

namespace GoldSim.Web.Administration.Models.Invoices {

  /*============================================================================================================================
  | VIEW MODEL: INVOICE TOPIC
  \---------------------------------------------------------------------------------------------------------------------------*/
  /// <summary>
  ///   Provides a strongly-typed data transfer object for representing a customer invoice
  /// </summary>
  public class InvoiceTopicViewModel {

    /*==========================================================================================================================
    | ID
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The unique identifier assigned by OnTopic for the entity.
    /// </summary>
    public int? Id { get; set; }

    /*==========================================================================================================================
    | KEY
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The unique identifier assigned to OnTopic for the particular invoice.
    /// </summary>
    /// <remarks>
    ///   By convention, invoices are assigned the same <see cref="Topic.Key"/> as their <see cref="InvoiceNumber"/>. As such,
    ///   the key will either be null (if it's a new invoice) or will be the original <see cref="InvoiceNumber"/> (if it's a
    ///   previously saved invoice that's being edited). That can be used to provide conditional logic for existing invoices,
    ///   such as detecting renames.
    /// </remarks>
    public int? Key { get; set; }

    /*==========================================================================================================================
    | INVOICE NUMBER
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The unique identifier generated by GoldSim's invoicing software and used to track payments back to purchases.
    /// </summary>
    [Required]
    [Range(0, 99999)]
    [Display(Name="Invoice Number")]
    [Remote("VerifyInvoiceNumber", "Invoices", AdditionalFields="Key")]
    public int InvoiceNumber { get; set; }

    /*==========================================================================================================================
    | INVOICE AMOUNT
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The amount due on the invoice, in United States Dollars (USD).
    /// </summary>
    [Required]
    [Range(0.00, 1000000.00)]
    [Display(Name = "Invoice Amount")]
    public double InvoiceAmount { get; set; }

    /*==========================================================================================================================
    | DATE PAID
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The date that the invoice was paid, if it has been paid.
    /// </summary>
    [Display(Name = "Date Paid")]
    public DateTime? DatePaid { get; set; } = null;

  } // Class
} // Namespace
