@model NavigationViewModel<NavigationTopicViewModel>

@if (Model.NavigationRoot.Children.Count > 0) {
  <nav id="PrimaryNavigationSmallScreen" class="navigation primary off-canvas position-left hide-for-large" data-off-canvas data-transition="overlap" role="navigation" vocab="http://schema.org" typeof="SiteNavigationElement">
    <button class="close-button" aria-label="Close menu" type="button" data-close>
      <span aria-hidden="true">&times;</span>
    </button>
    <ul class="vertical menu accordion-menu" data-accordion-menu data-multi-open="false">
      <!-- data-submenu-toggle="true" -->
      @foreach (var topic in Model.NavigationRoot.Children) {
        @WriteMenu(topic, false);
      }
    </ul>
  </nav>

  <nav id="PrimaryNavigation" class="navigation primary grid-x show-for-large">
    <div class="cell">
      <ul class="menu dropdown align-center" data-dropdown-menu>
        @foreach (var topic in Model.NavigationRoot.Children) {
          @WriteMenu(topic, true);
        }
      </ul>
    </div>
  </nav>

}

@{

  IHtmlContent Body(Func<object, IHtmlContent> body) => body(null);

  IHtmlContent WriteMenu(NavigationTopicViewModel topic, bool isDesktop = true, int indentLevel = 1) {

    var isParentMenu            = topic.Children.Count > 2;
    var targetUrl               = !isParentMenu || isDesktop? topic.WebPath : "#";
    var title                   = topic.ShortTitle?? topic.Title?? topic.WebPath.Substring(topic.WebPath.LastIndexOf(":"));

    var orientationAttribute    = isDesktop? "dropdown" : "vertical";
    var dropdownMenuAttribute   = isDesktop? "data-dropdown-menu" : "";

    var submenuParentClass      = isParentMenu? "is-dropdown-submenu-parent" : "";
    var selectedClass           = topic.IsSelected(Model.CurrentWebPath)? "selected" : "";
    var isActiveClass           = topic.IsSelected(Model.CurrentWebPath)? "is-active" : "";
    var childSelectedClass      = topic.WebPath.Equals(Model.CurrentWebPath)? "selected" : "";

    return Body(
      @<li class="@submenuParentClass">
        <a href="@targetUrl" class="@selectedClass" data-indent-level="@indentLevel">@title</a>
        @if (isParentMenu) {
          <ul class="menu @orientationAttribute @isActiveClass nested" @dropdownMenuAttribute>
            @if (!isDesktop) {
              <li><a href="@topic.WebPath" class="@childSelectedClass" data-indent-level="@indentLevel">Overview</a></li>
            }
            @foreach (var childTopic in topic.Children) {
              @WriteMenu(childTopic, isDesktop, indentLevel + 1);
            }
          </ul>
        }
      </li>
    );
  }

}

<!--
  Content Type: NavigationViewModel<NavigationTopicViewModel>
  View Location: ~/Views/Shared/Components/Menu/Default.cshtml
-->