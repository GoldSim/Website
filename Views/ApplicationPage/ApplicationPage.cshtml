@model Ignia.Topics.Web.Mvc.TopicViewModel

@{
  Layout = "~/Views/Layout/_Layout.cshtml";

  // Set Application category
  string category                               = @Model.Topic.Attributes.Get("Category", "");

}

@section LongTitleSection {

  <!-- Long Title (Subtitle) -->
  <header class="grid-x">
    <h2 class="category title">@(!String.IsNullOrEmpty(category) ? category + " " : "")Applications</h2>
    <h1 class="page title long cell">@Model.Topic.Attributes.Get("LongTitle", @Model.Topic.Title)</h1>
    @if (!String.IsNullOrWhiteSpace(Model.Topic.Attributes.Get("Subtitle"))) {
      <p class="subtitle">@Model.Topic.Attributes.Get("Subtitle")</p>
    }
  </header>
  <!-- /Long Title (Subtitle) -->

}

@section PageBodySection {

  <section class="panel body">

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("ThumbnailImage"))) {
      <!-- Thumbnail Image -->
      <picture class="callout picture thumbnail">
        <source srcset="@Model.Topic.Attributes.Get("ThumbnailImage")" />
        <img src="@Model.Topic.Attributes.Get("ThumbnailImage")" alt="@Model.Topic.Title">
      </picture>
      <!-- /Thumbnail Image -->
    }

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("Abstract", ""))) {
      <!-- Abstract -->
      <!-- <h1>Abstract</h1> -->
      <!-- Abstract Text -->
      <p>@Html.Raw(@Model.Topic.Attributes.Get("Abstract", ""))</p>
      <!-- /Abstract -->
    }

    <!-- Body Content -->
    <article class="page body">
      @Html.Raw(HttpUtility.HtmlDecode(@Model.Topic.Attributes.Get("Body")))
    </article>
    <!-- /Body Content -->

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("ModelImage"))) {
      <!-- Model Image -->
      <figure class="illustration full">
        <img src="@Model.Topic.Attributes.Get("ModelImage")" alt="model" />
      </figure>
      <!-- /Model Image -->
    }

    @if (getIncomingRelationships("CaseStudies").Count > 0) {
      <!-- Related Case Studies -->
      <h1>Case Studies</h1>
      @Html.Partial("_CardList", new GoldSim.Web.Models.CardListViewModel(getIncomingRelationships("CaseStudies"), "case-study"))
      <!-- /Related Case Studies -->
    }

    @if (getRelationships("Modules").Count > 0) {
      <!-- Related Modules -->
      <h1>Modules</h1>
      @Html.Partial("_CardList", new GoldSim.Web.Models.CardListViewModel(getRelationships("Modules"), "modules"))
      <!-- /Related Modules -->
    }

    @if (getIncomingRelationships("WhitePapers").Count > 0) {
      <!-- Related White Papers -->
      <h1>White Papers</h1>
      <ul>
        @foreach (Ignia.Topics.Topic paper in getIncomingRelationships("WhitePapers")) {
          <li><a href="@paper.Attributes.Get("URL")" onclick="trackEvent(this, 'WhitePaper', 'Download', 'White Paper: @paper.Key'); return false;" target="_blank">@paper.Title</a></li>
        }
      </ul>
      <!-- /Related White Papers -->
    }

    @if (getIncomingRelationships("TechnicalPapers").Count > 0) {
      <h1>Technical Papers</h1>
      @Html.Partial("_TechnicalPaperList", getIncomingRelationships("TechnicalPapers"))
    }

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("CompareTo")) || !String.IsNullOrEmpty(@Model.Topic.Attributes.Get("URL"))) {

      <!-- Learn More -->
      <h1>Learn More</h1>
      <ul>
        @if (@Model.Topic.Attributes.Get("CompareTo", "None").EndsWith("Approaches")) {
          <li><a href="/Topic/615">Compare GoldSim</a> to other simulation approaches</li>
        }
        else if (@Model.Topic.Attributes.Get("CompareTo", "None").EndsWith("Excel")) {
          <li><a href="/Topic/614">Compare GoldSim</a> to spreadsheet modeling approaches</li>
        }
        @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("URL"))) {
          <li><a href="@Model.Topic.Attributes.Get("URL")">@Model.Topic.Attributes.Get("LearnMoreLabel", "Learn more")</a></li>
        }
      </ul>
      <!-- Learn More -->

    }

  </section>

}

@functions{

  Dictionary<string, List<Ignia.Topics.Topic>> _relationships = new Dictionary<string, List<Ignia.Topics.Topic>>();

  List<Ignia.Topics.Topic> getIncomingRelationships(string relationship) {

    if (!_relationships.ContainsKey(relationship)) {

      var incomingRelationships = new List<Ignia.Topics.Topic>();

      if (Model.Topic.IncomingRelationships.Count > 0 && Model.Topic.IncomingRelationships.Contains("Applications")) {

        // Loop through incoming Applications relationships to populate topic lists
        foreach (Ignia.Topics.Topic relatedTopic in Model.Topic.IncomingRelationships["Applications"].SortedChildren) {

          // Populate Case Studies
          if (relatedTopic.UniqueKey.Contains(relationship) && !incomingRelationships.Contains(relatedTopic)) {
            incomingRelationships.Add(relatedTopic);
          }

        }

      }

      _relationships.Add(relationship, incomingRelationships);

    }

    return _relationships[relationship];

  }

  List<Ignia.Topics.Topic> getRelationships(string relationship) {

    if (!_relationships.ContainsKey(relationship)) {

      var relationships = new List<Ignia.Topics.Topic>();

      if (Model.Topic.Relationships.Count > 0 && Model.Topic.Relationships.Contains(relationship)) {

        foreach (Ignia.Topics.Topic relatedTopic in Model.Topic.Relationships["Modules"]) {
          if (!relationships.Contains(relatedTopic)) {
            relationships.Add(relatedTopic);
          }
        }

      }

      _relationships.Add(relationship, relationships);

    }

    return _relationships[relationship];

  }

}

<!--
  Content Type: Application Page
  View Location: ~/Views/Application/ApplicationPage.cshtml
-->
