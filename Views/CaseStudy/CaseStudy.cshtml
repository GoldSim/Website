@model Ignia.Topics.Web.Mvc.TopicViewModel

@{
  Layout = "~/Views/Layout/_Layout.cshtml";

  // Populate related Applications
  List<Ignia.Topics.Topic> applications = new List<Ignia.Topics.Topic>();
  if (Model.Topic.Relationships.Contains("Applications")) {
    foreach (Ignia.Topics.Topic relatedApplication in Model.Topic.Relationships["Applications"]) {
      if (!applications.Contains(relatedApplication)) {
        applications.Add(relatedApplication);
      }
    }
  }

}

@section PostTitleSection {

  <!-- Post Title -->
  <div class="medium-@(!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("DownloadURL"))? "8" : "12") cell align-middle">
    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("Customer"))) {
      <strong>Client:</strong>
      @Html.Raw(@customer(@Model.Topic.Attributes.Get("Customer"), @Model.Topic.Attributes.Get("CustomerURL")))
      <br/>
    }
    @if(applications.Count > 0) {
      <strong>@((applications.Count == 1)? "Application" : "Applications"):</strong>
      foreach (Ignia.Topics.Topic application in applications) {
        <a href="@application.WebPath" class="comma delimited">@application.Title</a>
      }
    }
  </div>
  @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("DownloadURL"))) {
    <div class="medium-4 cell align-middle">
      @Html.Raw(downloadButton(@Model.Topic.Attributes.Get("DownloadURL")))
    </div>
  }
  <!-- /Post Title -->

}

@section PageBodySection {

  <section class="panel body">

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("ThumbnailImage"))) {
      <!-- Thumbnail Image -->
      <picture class="callout picture">
        <source srcset="@Model.Topic.Attributes.Get("ThumbnailImage")" />
        <img src="@Model.Topic.Attributes.Get("ThumbnailImage")" alt="@Model.Topic.Title">
      </picture>
      <!-- /Thumbnail Image -->
    }

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("Abstract", ""))) {
      <!-- Abstract -->
      <!-- <h1>Abstract</h1> -->
      <!-- Abstract Text -->
      <p>@Html.Raw(@Model.Topic.Attributes.Get("Abstract", ""))</p>
      <!-- /Abstract -->
    }

    @Html.Raw(HttpUtility.HtmlDecode(@Model.Topic.Attributes.Get("Body")))

    @if (!String.IsNullOrEmpty(@Model.Topic.Attributes.Get("URL"))) {
      <h1>Learn More</h1>
      <ul>
        <li><a href="@Model.Topic.Attributes.Get("URL")">@Model.Topic.Attributes.Get("LearnMoreLabel", "Learn more")</a></li>
      </ul>
    }

  </section>

}

@functions{

  /*============================================================================================================================
  | SET UP CUSTOMER STRUCTURE
  \---------------------------------------------------------------------------------------------------------------------------*/
  string customer(string customerName, string customerUrl) {

    string customer             = "";
    if (!String.IsNullOrEmpty(customerUrl)) {
      customer                 += "<a href=\"" + customerUrl + "\" target=\"blank\">";
    }
    customer                   += "<strong>" + customerName + "</strong>";
    if (!String.IsNullOrEmpty(customerUrl)) {
      customer                 += "</a>";
    }

    return customer;
  }

  /*============================================================================================================================
  | SET UP DOWNLOAD BUTTON
  \---------------------------------------------------------------------------------------------------------------------------*/
  string downloadButton(string downloadUrl) {

    string download             = "";
    string label                = "Download";

    // Get download URL file name for click tracking
    string downloadName         = "";
    if (!String.IsNullOrEmpty(downloadUrl)) {
      string url                = downloadUrl;
      if (url.IndexOf("/") >= 0) {
        url                     = url.Substring(url.LastIndexOf("/") + 1);
      }
      if (url.ToLower().EndsWith(".pdf")) {
        url                     = url.Substring(0, url.ToLower().IndexOf(".pdf"));
      }
      downloadName              = url;
    }

    // Conditionally toggle label
    if (!downloadUrl.EndsWith(".pdf", StringComparison.CurrentCultureIgnoreCase)) {
      label = "Learn More";
    }

    download                    = "<a href=\"" + downloadUrl + "\""
                                + " target=\"_blank\" class=\"button large\""
                                + " onclick=\"trackEvent(this, 'Case Studies', 'Download', 'Case Studies: " + downloadName + "');return false;\">"
                                + label
                                + "</a>";

    return download;

  }

}

<!--
  Content Type: Case Study
  View Location: ~/Views/CaseStudy/CaseStudy.cshtml
-->