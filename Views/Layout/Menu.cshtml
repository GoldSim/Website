@model GoldSim.Web.Models.NavigationViewModel

@if (Model.NavigationRootTopic != null) {
  <nav id="PrimaryNavigationSmallScreen" class="navigation primary off-canvas position-left hide-for-large" data-off-canvas data-transition="overlap" role="navigation" vocab="http://schema.org" typeof="SiteNavigationElement">
    <button class="close-button" aria-label="Close menu" type="button" data-close>
      <span aria-hidden="true">&times;</span>
    </button>
    <ul class="vertical menu accordion-menu" data-accordion-menu data-multi-open="false"><!-- data-submenu-toggle="true" -->
      @foreach (Ignia.Topics.Topic topic in @Model.NavigationRootTopic.SortedChildren) {
        @WriteMenu(topic, 1, "mobile");
      }
    </ul>
  </nav>

  <nav id="PrimaryNavigation" class="navigation primary grid-x show-for-large">
    <div class="cell">
      <ul class="menu dropdown align-center" data-dropdown-menu>
        @foreach (Ignia.Topics.Topic topic in @Model.NavigationRootTopic.SortedChildren) {
          @WriteMenu(topic, 1, "desktop");
        }
      </ul>
    </div>
  </nav>

}

@helper WriteMenu(Ignia.Topics.Topic topic, int indentLevel, string screenType = "desktop") {

  @*============================================================================================================================
  | SKIP DISABLED, INACTIVE, AND HIDDEN TOPICS
  \---------------------------------------------------------------------------------------------------------------------------*@
  if (!IsValid(topic)) { return; }

  @*============================================================================================================================
  | WRITE NODE
  \---------------------------------------------------------------------------------------------------------------------------*@
  <li>
    <a href="@(screenType == "desktop" ? @topic.WebPath : "#")" class="@(IsSelected(topic, Model.Topic) ? "selected" : "")">
      @topic.Attributes.Get("ShortTitle", @topic.Title)
    </a>

    @*==========================================================================================================================
    | OPEN NODE
    \-------------------------------------------------------------------------------------------------------------------------*@
    @if (!topic.ContentType.Equals("PageGroup") && indentLevel < 3 && topic.Count(IsValid) > 2) {
      <ul class="menu @(screenType == "desktop" ? "dropdown" : "vertical") nested"@(screenType == "desktop" ? " data-dropdown-menu" : "")>
        <li>
          <a href="@topic.WebPath" class="@((topic.Equals(Model.Topic)) ? "selected" : "")">Overview</a>
          @foreach (Ignia.Topics.Topic childTopic in topic.SortedChildren) {
            @WriteMenu(childTopic, indentLevel + 1);
          }
</ul>
    }
  </li>

}

@functions{

  /*============================================================================================================================
  | DETERMINE VALID
  \---------------------------------------------------------------------------------------------------------------------------*/
  public bool IsValid(Ignia.Topics.Topic topic) {
    return
    topic.Attributes.Get("IsInactive") != "1" &&
    topic.Attributes.Get("IsDisabled") != "1" &&
    topic.Attributes.Get("IsHidden") != "1";
  }

  /*============================================================================================================================
  | DETERMINE SELECTED
  \---------------------------------------------------------------------------------------------------------------------------*/
  public bool IsSelected(Ignia.Topics.Topic topic, Ignia.Topics.Topic currentTopic) {
    while (currentTopic != null) {
      if (currentTopic == topic) return true;
      currentTopic = currentTopic.Parent;
    }
    return false;
  }

}

