@model GoldSim.Web.Models.NavigationViewModel

@if (Model.NavigationRootTopic != null) {
  <nav id="PrimaryNavigation" class="navigation primary off-canvas position-left" data-off-canvas data-transition="overlap" role="navigation" vocab="http://schema.org" typeof="SiteNavigationElement">
    <button class="close-button" aria-label="Close menu" type="button" data-close>
      <span aria-hidden="true">&times;</span>
    </button>
    <ul class="vertical menu accordion-menu" data-accordion-menu data-submenu-toggle="true" data-multi-open="false">
      @foreach (Ignia.Topics.Topic topic in @Model.NavigationRootTopic.OrderBy(t => t.SortOrder)) {
        @WriteMenu(topic, 1);
      }
    </ul>
  </nav>
}

@helper WriteMenu(Ignia.Topics.Topic topic, int indentLevel) {

  @*=========================================================================================================================
  | SKIP DISABLED, INACTIVE, AND HIDDEN TOPICS
  \------------------------------------------------------------------------------------------------------------------------*@
  if (!IsValid(topic)) { return; }

  @*=========================================================================================================================
  | WRITE NODE
  \------------------------------------------------------------------------------------------------------------------------*@
  <li>
    <a href="@topic.WebPath" class="@(IsSelected(topic, Model.Topic) ? "selected" : "")">@topic.Title</a>

    @*=======================================================================================================================
    | OPEN NODE
    \----------------------------------------------------------------------------------------------------------------------*@
    @if (!topic.ContentType.Equals("PageGroup") && indentLevel < 3 && topic.Count(IsValid) > 2) {
      <ul class="menu vertical nested">
        @foreach (Ignia.Topics.Topic childTopic in topic.OrderBy(t => t.SortOrder)) {
          @WriteMenu(childTopic, indentLevel + 1);
        }
      </ul>
    }
  </li>

}

@functions{

  /*=========================================================================================================================
  | DETERMINE VALID
  \------------------------------------------------------------------------------------------------------------------------*/
  public bool IsValid(Ignia.Topics.Topic topic) {
    return
    topic.Attributes.Get("IsInactive") != "1" &&
    topic.Attributes.Get("IsDisabled") != "1" &&
    topic.Attributes.Get("IsHidden") != "1";
  }

  /*=========================================================================================================================
  | DETERMINE SELECTED
  \------------------------------------------------------------------------------------------------------------------------*/
  public bool IsSelected(Ignia.Topics.Topic topic, Ignia.Topics.Topic currentTopic) {
    while (currentTopic != null) {
      if (currentTopic == topic) return true;
      currentTopic = currentTopic.Parent;
    }
    return false;
  }

}

