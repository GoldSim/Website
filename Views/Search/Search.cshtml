@using System.Configuration;
@{
  ViewBag.Title = "Search";
  Layout = "~/Views/Layout/_Layout.cshtml";
}

@section Head {
  <link rel="stylesheet" href="~/Shared/Styles/Views/Search.min.css" type="text/css" media="all" />
}

@section PageBodySection {
  <section class="panel body">

    <!-- Body Content -->
    <article class="page body search results">
      <form id="SearchResultSearchForm" action="/Web/Search/">
        <input type="search" id="SearchResultsSearchQuery" name="SearchText" />
      </form>
      <div id="SearchResults"></div>
      <div id="Pagination" class="pagination text-center"></div>
    </article>
    <!-- /Body Content -->

  </section>
}

@section Scripts {
  <script src="~/Shared/Scripts/Vendor/FlaviusMatis/jquery.simplePagination.js"></script>
  <script>
    $(function () {

      /**
       * Pre-populate results page search input value
       */
      $('#SearchResultsSearchQuery').val(getQuerystringValue('SearchText'));

      /**
       * Build initial results set and pagination
       */
      getSearchResults();
      getSearchResultsPagination();

      /**
       * Handle pagination interaction
       */
      $(document).on('click', '#Pagination button', function() {
        var offset              = $(this).data('offset');

        // Clear current results
        $('#SearchResults').html('');

        // Get results for selected page
        getSearchResults(offset);

        // Update selected pagination button
        $('#Pagination button').each(function () {
          $(this).removeClass('selected');
        });
        $(this).addClass('selected').blur();

        // Scroll back to top of content
        $('html, body').animate({
          scrollTop: $('article[itemprop="mainContentOfPage"]').offset().top
        }, 'slow');

      });

    });

    /**
     * Establish Bing Search API variables
     */
    var
      apiKey                    = '@ConfigurationManager.AppSettings["BingSearchPrimaryApiKey"]',
      customConfig              = '@ConfigurationManager.AppSettings["BingSearchCustomConfigID"]',
      searchQuery               = getQuerystringValue('SearchText'),
      baseApiUrl                = 'https://api.cognitive.microsoft.com/bingcustomsearch/v5.0/search?q=' + encodeURIComponent(searchQuery) + '&customconfig=' + customConfig + '&responseFilter=Webpages&safesearch=Off';

    /**
      * Build a set of search results based on the offset/page requested
      */
    function getSearchResults(offset) {
      offset                    = offset ? offset : 0;
      $.ajax({
        url                     : baseApiUrl + '&count=10&offset=' + offset + '&textDecorations=true&textFormat=HTML',
        headers                 : { 'Ocp-Apim-Subscription-Key': apiKey },
        success                 : function (result, status, xhr) {

          // Clear current results
          $('#SearchResults').html('');

          var searchResults     = result.webPages.value;
          for (var i = 0; i < searchResults.length; i++) {
            var
              title             = searchResults[i].name,
              url               = searchResults[i].url,
              displayUrl        = searchResults[i].displayUrl,
              snippet           = searchResults[i].snippet,
              searchResult      = '<div class="result"><a href="' + url + '" class="title">' + title + '</a><br/><small>' + displayUrl + '</small><p>' + snippet + '</p></div>';
            $('#SearchResults').append(searchResult);
          }
        }
      });
    };

    /**
      * Build search results pagination links based on the total number of results
      */
    function getSearchResultsPagination() {
      $.ajax({
        url                     : baseApiUrl,
        headers                 : { 'Ocp-Apim-Subscription-Key': apiKey },
        success                 : function (result, status, xhr) {
          var
            totalResults        = result.webPages.totalEstimatedMatches,
            pageSize            = 10,
            totalPages          = Math.ceil(totalResults/pageSize);

          $('#Pagination').pagination({
            items               : totalResults,
            itemsOnPage         : pageSize,
            displayedPages      : 0,
            edges               : 0,
            hrefTextPrefix      : '#Page',
            onPageClick         : function (pageNumber, event) {
              getSearchResults(((pageNumber-1)*pageSize));
            },
            onInit              : function() {
              var
                urlHash         = window.location.hash.substr(1),
                pageNumber      = 1;
              if (urlHash.indexOf('Page') > -1) {
                pageNumber      = urlHash.substr(4);
                getSearchResults(((pageNumber-1)*pageSize));
              }
            }
          });
        }
      });
    };

    /**
     * Determine and return the value for the requested querystring parameter
     */
    function getQuerystringValue(parameter) {
      parameter = parameter.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
      var
        regex = new RegExp('[\\?&]' + parameter + '=([^&#]*)'),
        results = regex.exec(location.search);
      return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    };

  </script>
}